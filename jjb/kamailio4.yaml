# This jenkins-job-build configuration sets up Jenkins jobs
# for building Debian packages of kamailio4
# which are provided using the repository software called reprepro
# [http://mirrorer.alioth.debian.org/] then.

- project:
    name: kamailio4
    repos: git://git.sip-router.org/kamailio
    jobs:
      - '{name}-source'
      - '{name}-binaries'
      - '{name}-piuparts'

- job-template:
      name: '{name}-source'
      project-type: matrix
      description: 'Build Debian source package of {name}.<br />Do not edit this job through the web, it is generated via jenkins-job-builder!'
      logrotate:
        numToKeep: 20
      disabled: false
      auth-token: kamailio-upstream-secret
      scm:
        - git:
            url: '{repos}'
            name: origin
            refspec: +refs/heads/*:refs/remotes/origin/*
            basedir: source
            branches:
              - master
            wipe-workspace: false
      execution-strategy:
        sequential: true
      axes:
        - axis:
            type: user-defined
            name: distribution
            values:
             - wheezy
             - jessie
             - squeeze
             - precise
      builders:
        - shell: 'rm -f ./* || true'
        - shell: '/home/admin/kamailio-deb-jenkins/scripts/jdg-generate-source'
        - shell: |
            mkdir -p report
            /usr/bin/lintian-junit-report *.dsc > report/lintian.xml
      publishers:
        - archive:
            artifacts: '*.gz,*.bz2,*.xz,*.deb,*.dsc,*.changes,lintian.txt'
        - trigger:
            project: '{name}-binaries'
            threshold: UNSTABLE
        - junit:
            results: '**/lintian.xml'
            keep-long-stdio: false
        - fingerprint:
            record-artifacts: true
      wrappers:
        - timestamps

- job-template:
      name: '{name}-binaries'
      project-type: matrix
      description: |
          <p>Build Debian binary packages of {name}.<br />Do not edit this job through the web, it is generated via jenkins-job-builder!</p>
      logrotate:
        numToKeep: 20
      execution-strategy:
        sequential: true
      axes:
        - axis:
            type: user-defined
            name: architecture
            values:
             - i386
             - amd64
        - axis:
            type: user-defined
            name: distribution
            values:
             - wheezy
             - squeeze
             - jessie
             - precise
      builders:
        - shell: |
           echo "* Removing files workspace before copying artifacts from another project. * "
           rm -f ./* || true
        - copyartifact:
            project: '{name}-source/distribution=$distribution'
            filter: '*'
            which-build: upstream-build
            fallback-to-last-successful: true
        - shell: "/home/admin/kamailio-deb-jenkins/scripts/jdg-build-package"
        - shell: |
            mkdir -p report
            /usr/bin/lintian-junit-report *.changes > report/lintian.xml
        - shell: |
            mkdir -p report adt
            touch adt/summary # do not fail if no autopkgtest run took place
            /usr/bin/adtsummary_tap adt/summary > report/autopkgtest.tap
      publishers:
        - archive:
            artifacts: '**/*.gz,**/*.bz2,**/*.xz,**/*.deb,**/*.dsc,**/*.changes,**/lintian.txt'
        - tap:
            results: 'report/*.tap'
        - junit:
            results: '**/lintian.xml'
            keep-long-stdio: false
        - fingerprint:
            record-artifacts: true
        - trigger:
            project: '{name}-repos'
            threshold: UNSTABLE
        - trigger:
            project: '{name}-piuparts'
            threshold: UNSTABLE
        - workspace-cleanup:
            dirmatch: false
      wrappers:
        - timestamps

- job-template:
      name: '{name}-repos'
      project-type: matrix
      description: |
	<p>Repository handling for Debian packages of {name}.<br />Do not edit this job through the web, it is generated via jenkins-job-builder!</p>
      logrotate:
        numToKeep: 20
      execution-strategy:
        sequential: true
      axes:
        - axis:
            type: user-defined
            name: architecture
            values:
             - i386
             - amd64
        - axis:
            type: user-defined
            name: distribution
            values:
             - wheezy
             - squeeze
             - jessie
             - precise
      builders:
        - shell: |
           echo "* Removing files workspace before copying artifacts from another project. * "
           rm -f ./* || true
        - copyartifact:
            project: '{name}-source/architecture=$architecture,distribution=$distribution'
            filter: '*'
	    target: 'binaries/'
            which-build: upstream-build
            fallback-to-last-successful: true
        - shell: "/home/admin/kamailio-deb-jenkins/scripts/jdg-repository"
      publishers:
        - archive:
            artifacts: '**/*.gz,**/*.bz2,**/*.xz,**/*.deb,**/*.dsc,**/*.changes'
        - fingerprint:
            record-artifacts: true
        - workspace-cleanup:
            dirmatch: false
      wrappers:
        - timestamps

- job-template:
      name: '{name}-piuparts'
      project-type: freestyle
      description: 'Installation and upgrade tests for {name} Debian packages.<br />Do not edit this job through the web, it is generated via jenkins-job-builder!'
      disabled: false
      logrotate:
        numToKeep: 20
      parameters:
        - string:
            name: architecture
            default: amd64
            description: "Architecture that should be used."
      builders:
        - copyartifact:
            project: '{name}-binaries/architecture=$architecture'
            filter: '*.deb'
            which-build: upstream-build
            fallback-to-last-successful: true
            flatten: true
            target: 'artifacts/'
        - shell: |
            # sadly piuparts always returns with exit code 1 :((
            sudo piuparts_wrapper $PWD/artifacts/*.deb || true
        - shell: 'piuparts_tap piuparts.txt > piuparts.tap'
      publishers:
        - tap:
            results: 'piuparts.tap'
        - archive:
            artifacts: 'piuparts.*'
        - fingerprint:
            record-artifacts: true
        - workspace-cleanup:
            dirmatch: false
      wrappers:
        - timestamps

#!/bin/sh
GIT="/usr/bin/git"
REPORT_DIR="${WORKSPACE}/reports"
TAG_FILE="${REPORT_DIR}/tags.info"
FORCE=${cppcheck_force:-false}
SOURCE=${source:-${WORKSPACE}/source}
SHA=$(cd ${SOURCE}; ${GIT} show ${BUILD_TAG} | awk '/^commit [a-z0-9]+$/ { print $2 }')
BASE_TAG=${basetag:-}
set -e

get_tag_prev() {
	local bt
	if [ -f "$TAG_FILE" ]; then
		SHA_PREV=$(grep -v ${BUILD_TAG} ${TAG_FILE}| sort -r | cut -f2 -d:)
	else
		if [ -n "${BASE_TAG}" ]; then
			bt=$(cd ${SOURCE}; ${GIT} tag | grep "^${BASE_TAG}" | sort -r | head -n1)
			SHA_PREV=$(cd ${SOURCE}; ${GIT} show ${bt} | awk '/^commit [a-z0-9]+$/ { print $2 }')
		fi
	fi
}

save_tag_info() {
	local exist
	exist=$(grep -e ${BUILD_TAG} -e ${SHA} ${TAG_FILE} 2>/dev/null || true)
	if [ -z "$exist" ]; then
		echo "saving new tag:${BUILD_TAG} info to ${TAG_FILE}"
		echo "${BUILD_TAG}:${SHA}" >> ${TAG_FILE}
	fi
}

get_changed_files() {
	get_tag_prev
	if [ -n "${SHA_PREV}" ]; then
		CHANGES=$(cd ${SOURCE}; ${GIT} diff --name-only ${SHA_PREV}..${BUILD_TAG}| xargs)
	fi
	if [ -z "${CHANGES}" ]; then
		echo "use ${SOURCE} dir"
		CHANGES="${SOURCE}"
	fi
}

mkdir -p ${REPORT_DIR}
get_changed_files

if ! which cppcheck >/dev/null 2>&1 ; then
  echo "cppcheck not available yet, installing cppcheck Debian package"
  sudo apt-get -y install cppcheck
fi

save_tag_info

if [ "${CHANGES}" != "${SOURCE}" ]; then
	cd ${SOURCE}
else
	if [ $(echo "${FORCE}"|tr '[:upper:]' '[:lower:]') = "false" ]; then
		echo "No changes since last build job"
		exit 0
	fi
fi

/usr/bin/cppcheck -j $(/usr/bin/nproc) --force --xml --xml-version=2 ${CHANGES} 2> ${REPORT_DIR}/cppcheck.xml

# hard check
#/usr/bin/cppcheck -j $(/usr/bin/nproc) --enable=all --force --inconclusive --xml --xml-version=2 ${SOURCE} 2> reports/cppcheck.xml
